@*----------------------------------------------------------------------------

(C) Copyright 2012 Johnson Controls, Inc.
Use or Copying of all or any part of this program, except as
permitted by License Agreement, is prohibited.

------------------------------------------------------------------------------*@
@model ActiveAlarmsModel
@{
    ViewBag.Title = Resources.ActiveViewTitle;
    ViewBag.HelpLink = Html.GetLocalizedHelpLink("~/Help/index_csh.htm#1001,withnavpane=true");
}
@section Scripts
{
    <script src="@Url.Content("~/ViewModels/AlarmManager/AlarmDisplayOptions.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/ViewModels/AlarmManager/HistoryEntry.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/ViewModels/AlarmManager/Alarm.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/ViewModels/AlarmManager/AlarmManagerViewModel.js")" type="text/javascript"></script>
}
<link href="~/Content/Alarms.css" rel="stylesheet" type="text/css" />
<div class="alarm-content clear-fix">
    <div class="clear-fix">
        <div class="float-left">
            <h1>@Resources.ActiveViewInstructions</h1>
        </div>
        <div class="dropdown pull-right">
            <button class="btn-small" data-toggle="dropdown">
                <img id="settingsButtonImage" src="~/Images/gear.png" alt="gear" />
               <b class="caret"></b>
            </button>
            <div id="settingsDropdown" class="dropdown-menu">
                @using (Html.BeginForm("Active", "Alarms", FormMethod.Post, new { @class = "form-inline" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.DropDownListFor(m => m.UserTimeZone, new SelectList(ActiveAlarmsModel.TimeZones, "Id", "DisplayName"), new { data_bind = "event: { change: timeZoneSelectionChanged}" })
                }
            </div>
        </div>
        <div class="float-right" style="margin-top: 30px;">
            <div class="summary" data-bind="visible: showNewAlarmCount">
                <strong>@Html.Raw(string.Format(Resources.ActiveViewAlarmListNewAlarmsFormat,
                              "<span data-bind=\"text: queuedNewAlarmCount\"></span>"))</strong>
            </div>
            <div class="summary">
                @Html.Raw(string.Format(Resources.AlarmManagerAlarmListStatusFormat,
                              "<span data-bind=\"text: numberOfAlarms\"></span>",
                              "<span data-bind=\"text: numberOfPendingAlarms\"></span>"))
            </div>
        </div>
        <div class="label label-info float-right" id="loadingMessage" style="margin-top: 30px;"
            data-bind="visible: isLoading">
            @string.Format(Resources.ActiveViewAlarmListLoadingMessage)
        </div>
    </div>
    <div id="alarmManager">
        <div class="alarmList">
            <div class="list">
                <div class="accordion scrolling" data-bind="attr: {'id': alarmListId}, foreach: displayedAlarms">
                    <div class="alarm accordion-group" data-bind="attr: {'id': id}">
  
                        <div class="accordion-heading clear-fix" data-bind="css: {'expanded': isExpanded}">
                            <div class="header-row clear-fix">
                                <div class="description column" data-bind="attr: {'title': instructions}">
                                    <span class="bold-text" data-bind="text: description"></span>
                                    <span data-bind="visible: isInstructionAvailable">
                                        <i class="icon-info-sign"></i>
                                    </span>
                                </div>
                                <div id="status" class="shaped column" data-bind="attr:{ title: priority }, style: { 'backgroundColor': priorityColor }">
                                    <div class="layer-one shaped layer gradient">
                                        <div class="layer-two shaped layer gradient" data-bind="attr:{ title: messageDateTimeString }">
                                            <div class="layer-three layer">
                                                <span data-bind="text: messageDisplayDateTimeString"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="right-side column">
                                    <div class="alarm-state column">
                                        <span data-bind="text: sourceStateDescription, attr: {'title': '@Resources.AlarmManagerToolTipState'}, css : {'in-alarm' : isAlarmStateAlarm}">
                                        </span>
                                    </div>
                                    <div class="item-action column">
                                        <button class="btn btn-mini btn-primary" data-bind="click: $root.acknowledgeAlarmClicked, enable: isPending, visible: isAcknowledgeVisible"
                                            data-action="Acknowledge">
                                            @Resources.ActiveViewAcknowledgeItemTitle
                                        </button>
                                        <button class="btn btn-mini" data-bind="click: $root.completeAlarmClicked, enable: isCompletable, visible: isCompleteVisible, css : {'btn-success': isCompletable}"
                                            data-action="Complete">
                                            @Resources.ActiveViewCompleteItemTitle
                                        </button>
                                        <button class="btn btn-mini btn-info" data-bind="click: $root.removeAlarmClicked, enable: isRemovable,  visible: isRemoveVisible"
                                            data-action="Complete">
                                            @Resources.ActiveViewRemoveItemTitle
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="header-body">
                                <div class="repsonse-row clear-fix">
                                    <div class="float-left response-input">
                                        <div class="input-append">
                                            <input data-bind="attr: {'id': responseTextId, 'data-source': $root.definedResponsesArray}, event: {keypress: $root.onResponseInputKeypress}, value: enteredResponse, valueUpdate: 'afterkeydown', enable: isRespondable"
                                                   class="input-xlarge" type="text" maxlength="255" placeholder="@Resources.ActiveViewAddNote" data-provide="typeahead" data-items="4" />
                                            <button class="btn" data-bind="attr: {'id': enterResponseButtonId}, click: $root.respondToAlarmClicked, enable: isValidResponse"
                                                data-action="RespondTo">
                                                <i class="icon-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                
                                    <div class="float-right">
                                        <div class="label float-right space-before">
                                            <span data-bind="text: alarmStateDescription, attr: {'title': '@Resources.AlarmManagerToolTipStatus'}"></span>
                                        </div>
                                        <div class="label float-right space-before">
                                            <span data-bind="text: site, attr: {'title': '@Resources.AlarmManagerToolTipSite'}"></span>
                                        </div>
                                        <div class="label float-right space-before">
                                            <span data-bind="text: category, attr: {'title': '@Resources.AlarmManagerToolTipCategory'}"></span>
                                        </div>
                                        <div class="label label-inverse float-right" data-bind="visible: isEscalationVisible">
                                            <span data-bind="text: escalation, attr: {'title': '@Resources.AlarmManagerToolTipEscalation'}"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="clear-fix">
                                    <div>
                                        <a data-toggle="collapse" data-parent="#alarmList" data-bind="attr: {'href': detailsIdSelector}, visible: !isExpanded()">
                                            @Resources.AlarmManagerViewShowHistoryText &gt;&gt; </a>
                                    </div>
                                    <div>
                                        <a data-toggle="collapse" data-parent="#alarmList" data-bind="attr: {'href': detailsIdSelector}, visible: isExpanded">
                                            &lt;&lt; @Resources.AlarmManagerViewHideHistoryText
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="item-details collapse" data-bind="attr: {'id': detailsId}, event: {show: $root.detailsShow, shown: detailsShown, hide: $root.detailsHide}, css: {'in' : isExpanded()}">
                            <div class="entryList">
                                <div class="history-entry clear-fix column-heading">
                                    <span class="history-timestamp column">@Resources.ActiveViewAlarmHistoryTimeStamp</span>
                                    <span class="history-status column">@Resources.ActiveViewAlarmHistoryAlarmStatus</span>
                                    <span class="history-user column">@Resources.ActiveViewAlarmHistoryUser</span>
                                    <span class="history-state column">@Resources.ActiveViewAlarmHistoryState</span>
                                    <span class="history-response column">@Resources.ActiveViewAlarmHistoryResponse</span>
                                </div>
                                <div class="list">
                                    <div id="alarmHistory" class="scrolling" data-bind="foreach: historyEntries">
                                        <div class="history-entry clear-fix">
                                            <div class="history-timestamp column">
                                                <span data-bind="text: timestamp"></span>
                                            </div>
                                            <div class="history-status column">
                                                <span data-bind="text: alarmStatus"></span>
                                            </div>
                                            <div class="history-user column">
                                                <span data-bind="text: operatorName"></span>
                                            </div>
                                            <div class="history-state column">
                                                <span data-bind="text: alarmState"></span>
                                            </div>
                                            <div class="history-response column">
                                                <span data-bind="text: response"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script language="javascript">
    //
    // Initialize the page view model after the page is loaded and ready
    ///
    $(document).ready(function () {
        "use strict";
        var viewModel = new AlarmManagerViewModel({ freezeWhenExpanded: true, autoExpand: false });

        ko.applyBindings(viewModel);
        viewModel.enableDelayedLoading();
    });    
</script>